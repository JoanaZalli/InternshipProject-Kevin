<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BlockedAccount" xml:space="preserve">
    <value>Account is blocked due to multiple incorrect tries.</value>
  </data>
  <data name="DuplicateEmail" xml:space="preserve">
    <value>Email already exists.</value>
  </data>
  <data name="DuplicateUsername" xml:space="preserve">
    <value>Username already exists.</value>
  </data>
  <data name="EmailAlreadyVerified" xml:space="preserve">
    <value>The email was already verified.</value>
  </data>
  <data name="EmailDoesntExist" xml:space="preserve">
    <value>The provided email does not exist.</value>
  </data>
  <data name="EmailFormatRestriction" xml:space="preserve">
    <value>Please follow the given email format "johndoe@mail.com</value>
  </data>
  <data name="EmptyAccessToken" xml:space="preserve">
    <value>Please provide the access token.</value>
  </data>
  <data name="EmptyEmail" xml:space="preserve">
    <value>The email can not be empty. Please provide a value.</value>
  </data>
  <data name="EmptyFirstName" xml:space="preserve">
    <value>The first name can not be empty. Please provide a value.</value>
  </data>
  <data name="EmptyId" xml:space="preserve">
    <value>Please provide a id associated with the entity.</value>
  </data>
  <data name="EmptyLastName" xml:space="preserve">
    <value>The last name can not be empty. Please provide a value.</value>
  </data>
  <data name="EmptyPassword" xml:space="preserve">
    <value>The password can not be empty. Please provide a value.</value>
  </data>
  <data name="EmptyPermissionName" xml:space="preserve">
    <value>The name of the permission can not be empty. Please provide a value.</value>
  </data>
  <data name="EmptyPhoneNumber" xml:space="preserve">
    <value>The phone number can not be empty. Please provide a value.</value>
  </data>
  <data name="EmptyPrefix" xml:space="preserve">
    <value>The prefix can not be empty. Please provide a value.</value>
  </data>
  <data name="EmptyRefreshToken" xml:space="preserve">
    <value>Please provide the refresh token.</value>
  </data>
  <data name="EmptyRoleName" xml:space="preserve">
    <value>The name of the role can not be empty. Please provide a value.</value>
  </data>
  <data name="EmptyToken" xml:space="preserve">
    <value>The token can not be empty. Please provide a value.</value>
  </data>
  <data name="EmptyUsername" xml:space="preserve">
    <value>The username can not be empty. Please provide a value.</value>
  </data>
  <data name="EmptyVerificationTokens" xml:space="preserve">
    <value>Invalid request.</value>
  </data>
  <data name="FirstNameMaximumLengthRestriction" xml:space="preserve">
    <value>Your first name length must not exceed 25 characters.</value>
  </data>
  <data name="IncorrectPassword" xml:space="preserve">
    <value>The entered password is not correct.</value>
  </data>
  <data name="InvalidPermissions" xml:space="preserve">
    <value>The provided permission/permissions are incorrect.</value>
  </data>
  <data name="InvalidRoles" xml:space="preserve">
    <value>The provided role/roles are incorrect.</value>
  </data>
  <data name="InvalidToken" xml:space="preserve">
    <value>Provided token is incorrect.</value>
  </data>
  <data name="InvalidUsername" xml:space="preserve">
    <value>Incorrect username entered.</value>
  </data>
  <data name="LastNameMaximumLengthRestriction" xml:space="preserve">
    <value>Your last name length must not exceed 25 characters.</value>
  </data>
  <data name="MissingPermission" xml:space="preserve">
    <value>You do not have the required permissions in order to access this resource.</value>
  </data>
  <data name="PasswordLowercaseLetterRestriction" xml:space="preserve">
    <value>Your password must contain at least one lowercase letter.</value>
  </data>
  <data name="PasswordMaximumLengthRestriction" xml:space="preserve">
    <value>Your password length must not exceed 16 characters.</value>
  </data>
  <data name="PasswordMinimumLengthRestriction" xml:space="preserve">
    <value>Your password length must be at least 8 characters.</value>
  </data>
  <data name="PasswordNumberRestriction" xml:space="preserve">
    <value>Your password must contain at least one number.</value>
  </data>
  <data name="PasswordsDontMatch" xml:space="preserve">
    <value>Passwords do not match.</value>
  </data>
  <data name="PasswordUppercaseLetterRestriction" xml:space="preserve">
    <value>Your password must contain at least one uppercase letter.</value>
  </data>
  <data name="PermissionDescriptionRestriction" xml:space="preserve">
    <value>The description of the permission must not exceed 250 characters.</value>
  </data>
  <data name="PermissionDoesntExist" xml:space="preserve">
    <value>The provided permission does not exist.</value>
  </data>
  <data name="PhoneNumberMaximumLengthRestriction" xml:space="preserve">
    <value>Your phone number must not exceed 20 characters.</value>
  </data>
  <data name="PhoneNumberMinimumLengthRestriction" xml:space="preserve">
    <value>Your phone number must be at least 8 characters.</value>
  </data>
  <data name="PrefixFormatRestriction" xml:space="preserve">
    <value>Please follow the given prefix format "+XX/+XXX"</value>
  </data>
  <data name="RoleDoesntExist" xml:space="preserve">
    <value>The provided role does not exist.</value>
  </data>
  <data name="TokenExpired" xml:space="preserve">
    <value>Link has expired.</value>
  </data>
  <data name="UnathorizedAccess" xml:space="preserve">
    <value>You do not have the necessary authorization in order to access this resource.</value>
  </data>
  <data name="UnverifiedEmail" xml:space="preserve">
    <value>Please verify your email in order to proceed with the login.</value>
  </data>
  <data name="UsernameDoesntExist" xml:space="preserve">
    <value>The provided username does not exist.</value>
  </data>
  <data name="UsernameMinimumLengthRestriction" xml:space="preserve">
    <value>Your username length must be at least 8 characters.</value>
  </data>
  <data name="UsernameNumberRestriction" xml:space="preserve">
    <value>Your username must contain at least one number.</value>
  </data>
</root>